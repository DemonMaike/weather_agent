import os
import sys
import json
from pathlib import Path

def main():
    interpreter = sys.executable
    script_path = Path("mcp_weather_server.py").resolve()

    if not script_path.exists():
        print(f"[‚ùå] –§–∞–π–ª {script_path} –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ —Å —ç—Ç–∏–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º.")
        return

    print("üîß –í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ MCP:")
    print("1 ‚Äî Claude Desktop")
    print("2 ‚Äî Cursor AI")
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()

    if choice not in {"1", "2"}:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
        return

    config = {
        "mcpServers": {
            "weather-agent": {
                "command": interpreter,
                "args": [str(script_path)],
                "env": {}
            }
        }
    }

    json_output = json.dumps(config, indent=2)

    print("\n‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ–Ω—Ñ–∏–≥:\n")
    print(json_output)

    if choice == "1":
        print("\nüìå –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ –≤ —Ñ–∞–π–ª `claude_desktop_config.json` –≤ —Ä–∞–∑–¥–µ–ª–µ `mcpServers`.")
        print("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:")
        print("  - Windows: %APPDATA%\\Claude\\claude_desktop_config.json")
        print("  - macOS: ~/Library/Application Support/Claude/claude_desktop_config.json")
        print("  - Linux: ~/.config/Claude/claude_desktop_config.json")
        print("\nüí° –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Claude Desktop:")
        print("  1. –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é 'Claude' > 'Settings...'.")
        print("  2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É 'Developer'.")
        print("  3. –ù–∞–∂–º–∏—Ç–µ 'Edit Config' –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.")
        print("  4. –í—Å—Ç–∞–≤—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON –≤ —Ä–∞–∑–¥–µ–ª `mcpServers`.")

    else:
        print("\nüìå –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ –≤ —Ñ–∞–π–ª `.cursor/mcp.json` –≤ —Ä–∞–∑–¥–µ–ª–µ `mcpServers`.")
        print("–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:")
        print("  - –ì–ª–æ–±–∞–ª—å–Ω–æ: ~/.cursor/mcp.json")
        print("  - –õ–æ–∫–∞–ª—å–Ω–æ –≤ –ø—Ä–æ–µ–∫—Ç–µ: ./project/.cursor/mcp.json")
        print("\nüí° –í –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Cursor AI:")
        print("  1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ 'File' > 'Cursor Settings'.")
        print("  2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É 'MCP'.")
        print("  3. –ù–∞–∂–º–∏—Ç–µ 'Add New Global MCP Server' –∏–ª–∏ 'Add New Project MCP Server'.")
        print("  4. –í—Å—Ç–∞–≤—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª.")

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:
    save = input("üíæ –•–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª (y/n)? ").strip().lower()
    if save == "y":
        fname = "mcp_config.json"
        with open(fname, "w", encoding="utf-8") as f:
            f.write(json_output)
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ {fname}")

if __name__ == "__main__":
    main()
